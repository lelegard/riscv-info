
Base architecture
=================
RV64IMAFDCVH (64 bits)
  I: Integer instructions
  M: Integer multiplication and division
  A: Atomic instructions
  F: Single-precision floating-point
  D: Double-precision floating-point
  C: Compressed instructions
  V: Vector operations
  H: Hypervisor
  B: Bit manipulation

ISA extensions
==============
Found 118 extensions
  Sdtrig       : Debug triggers
  Sha          : Augmented hypervisor
  Shcounterenw : Support writeable enables for any supported counter
  Shgatpa      : SvNNx4 mode supported for all modes supported by satp, as well as Bare
  Shtvala      : htval provides all needed values
  Shvsatpa     : vsatp supports all modes supported by satp
  Shvstvala    : vstval provides all needed values
  Shvstvecd    : vstvec supports Direct mode
  Smaia        : Machine-level advanced interrupt architecture
  Smcdeleg     : Machine-level counter delegation
  Smcntrpmf    : Cycle and instret privilege mode filtering
  Smcsrind     : Machine-level indirect CSR access
  Smctr        : Control transfer records, machine and supervisor modes
  Smepmp       : Machine-level memory access and execution prevention
  Smmpm        : Machine-level pointer masking for Machine-level
  Smnpm        : Machine-level pointer masking for next lower privilege
  Smstateen    : Machine-level view of the state-enable
  Ssaia        : Supervisor-level advanced interrupt architecture
  Ssccfg       : Supervisor-level counter configuration
  Ssccptr      : Main memory supports page table reads
  Sscofpmf     : Count overflow and mode-based filtering
  Sscounterenw : Support writeable enables for any supported counter
  Sscsrind     : Supervisor-level indirect CSR access
  Ssctr        : Control Transfer Records, supervisor mode only
  Ssdbltrp     : Address double trap at privilege modes lower than Machine
  Ssnpm        : Supervisor-level pointer masking for next lower privilege
  Sspm         : Indicates that there is pointer-masking support in supervisor mode
  Ssstateen    : Supervisor-level view of the state-enable
  Ssstrict     : Unimplemented reserved encodings raise illegal instruction exceptions
  Sstc         : Supervisor-level timer interrupts
  Sstvala      : stval provides all needed values
  Sstvecd      : stvec supports direct mode
  Ssu64xl      : UXLEN=64 must be supported
  Supm         : Indicates that there is pointer-masking support in user mode
  Sv48         : Page-based 48-bit virtual-memory system
  Svadu        : Hardware updating of A/D Bits
  Svinval      : Fine-grained address-translation cache invalidation
  Svnapot      : NAPOT translation contiguity
  Svpbmt       : Page-based memory types
  Svrsw60t59b  : PTE reserved-for-software bits 60-59
  Svvptc       : Obviating memory-management instructions after marking PTEs valid
  Za64rs       : Reservation set size of 64 bytes
  Zaamo        : Atomic memory operations
  Zabha        : Byte and halfword atomic memory operations
  Zacas        : Atomic compare-and-swap (CAS) instructions
  Zalrsc       : Load-reserved/store-conditional
  Zama16b      : Atomic misaligned acces to main memory regions that do not cross aligned 16-byte boundary
  Zawrs        : Wait-on-reservation-set instructions
  Zba          : Address computation
  Zbb          : Bit manipulation
  Zbc          : Carryless multiplication
  Zbkb         : Manipulation for cryptography
  Zbkc         : Carryless multiplication for cryptography
  Zbkx         : Crossbar permutation
  Zbs          : Single-bit manipulation
  Zca          : Compressed instructions
  Zcb          : Additional compressed instructions
  Zcd          : Compressed double precision FP loads and stores
  Zcmop        : Compressed may-be-operations
  Zfa          : Additional FP instructions
  Zfbfmin      : Scalar BF16 converts
  Zfh          : Half-precision FP
  Zfhmin       : Minimal half-precision FP
  Zic64b       : Cache block size is 64 bytes
  Zicbom       : Cache-block management
  Zicbop       : Cache-block prefetching
  Zicboz       : Cache-block zeroing
  Ziccamoa     : Main memory supports all atomics in A
  Ziccif       : Main memory supports instruction fetch with atomicity requirement
  Zicclsm      : Main memory supports misaligned loads/stores
  Ziccrse      : Main memory supports forward progress on LR/SC sequences
  Zicfilp      : Landing pads
  Zicfiss      : Shadow stack
  Zicntr       : Basic performance counters
  Zicond       : Integer conditional operations
  Zicsr        : Control and Status Register instructions
  Zifencei     : Instruction-fetch fence instruction
  Zihintntl    : Non-temporal locality hints
  Zihintpause  : Pause Hint
  Zihpm        : Hardware performance counters
  Zimop        : may-be-operations
  Zk           : Standard scalar cryptography
  Zkn          : NIST cryptography
  Zknd         : AES decryption
  Zkne         : AES encryption
  Zknh         : SHA2 hashing
  Zkr          : Entropy source
  Zks          : ShangMi (SM) cryptography
  Zksed        : SM4 block cypher
  Zksh         : SM3 hashing
  Zkt          : Data-independent execution latency
  Zmmul        : Multiplication subset of M (MUL, MULH, MULHU, MULHSU, MULW)
  Ztso         : RISC-V total store ordering (RVTSO)
  Zvbb         : Vector basic bit-manipulation
  Zvbc         : Vector carryless multiplication
  Zve32f       : Embedded vectors (32-bit int, 32-bit FP)
  Zve32x       : Embedded vectors (32-bit int)
  Zve64d       : Embedded vectors (64-bit int, 64-bit FP)
  Zve64f       : Embedded vectors (64-bit int, 32-bit FP)
  Zve64x       : Embedded vectors (64-bit int)
  Zvfbfmin     : Vector BF16 converts
  Zvfbfwma     : Vector BF16 widening mul-add
  Zvfh         : Vector half-precision FP
  Zvfhmin      : Vector for minimal half-precision FP
  Zvkb         : Vector cryptography bit-manipulation
  Zvkg         : Vector cryptography GCM/GMAC
  Zvkn         : NIST algorithm suite
  Zvknc        : NIST suite with carryless multiply
  Zvkned       : NIST suite vector AES block cipher
  Zvkng        : NIST suite vector AES with GCM
  Zvknha       : NIST suite vector SHA-2 secure hash (SHA-256 only)
  Zvknhb       : NIST suite vector SHA-2 secure hash (SHA-256, SHA-512)
  Zvks         : ShangMi (SM) algorithm suite
  Zvksc        : ShangMi suite with carryless multiplication
  Zvksed       : ShangMi suite SM4 block cipher
  Zvksg        : ShangMi suite with GCM
  Zvksh        : ShangMi suite SM3 secure hash
  Zvkt         : Vector data-independent execution latency

ISA profiles
============
  RVI20U32 : No
  RVI20U64 : Yes
  RVA20U64 : No
    Missing 1 extensions:
    Za128rs : Reservation set size of 128 bytes
  RVA20S64 : No
    Missing 4 extensions:
    Za128rs : Reservation set size of 128 bytes
    Ss1p11  : Supervisor-level architecture v1.11
    Svbare  : Bare mode virtual-memory translation supported
    Svade   : Raise exceptions on improper A/D bits
  RVA22U64 : Yes
  RVA22S64 : No
    Missing 4 extensions:
    Ss1p12 : Supervisor-level architecture v1.12
    Svbare : Bare mode virtual-memory translation supported
    Sv39   : Page-based 39-bit virtual-memory system
    Svade  : Raise exceptions on improper A/D bits
  RVA23U64 : Yes
  RVA23S64 : No
    Missing 4 extensions:
    Ss1p13 : Supervisor-level architecture v1.13
    Svbare : Bare mode virtual-memory translation supported
    Sv39   : Page-based 39-bit virtual-memory system
    Svade  : Raise exceptions on improper A/D bits
  RVB23U64 : Yes
  RVB23S64 : No
    Missing 3 extensions:
    Ss1p13 : Supervisor-level architecture v1.13
    Sv39   : Page-based 39-bit virtual-memory system
    Svade  : Raise exceptions on improper A/D bits

