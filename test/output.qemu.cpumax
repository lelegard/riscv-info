
Base architecture
=================
RV64IMAFDCVH (64 bits)
  I: Integer instructions
  M: Integer multiplication and division
  A: Atomic instructions
  F: Single-precision floating-point
  D: Double-precision floating-point
  C: Compressed instructions
  V: Vector operations
  H: Hypervisor extension
  B: Bit manipulation

ISA extensions
==============
Found 118 extensions
  Sdtrig       : Debug triggers
  Sha          : Augmented hypervisor extension
  Shcounterenw : Support writeable enables for any supported counter
  Shgatpa      : SvNNx4 mode supported for all modes supported by satp, as well as Bare
  Shtvala      : htval provides all needed values
  Shvsatpa     : vsatp supports all modes supported by satp
  Shvstvala    : vstval provides all needed values
  Shvstvecd    : vstvec supports Direct mode
  Smaia        : Machine-level Advanced Interrupt Architecture
  Smcdeleg     : Machine-level Counter Delegation
  Smcntrpmf    : Cycle and Instret Privilege Mode Filtering
  Smcsrind     : Machine-level indirect CSR access
  Smctr        : Control Transfer Records, machine and supervisor modes
  Smepmp       : Machine-level memory access and execution prevention
  Smmpm        : Machine-level pointer masking for Machine-mode
  Smnpm        : Machine-level pointer masking for next lower privilege
  Smstateen    : Machine-mode view of the state-enable extension
  Ssaia        : Supervisor-level Advanced Interrupt Architecture
  Ssccfg       : Supervisor-level Counter Configuration
  Ssccptr      : Main memory supports page table reads
  Sscofpmf     : Count Overflow and Mode-Based Filtering
  Sscounterenw : Support writeable enables for any supported counter
  Sscsrind     : Supervisor-level indirect CSR access
  Ssctr        : Control Transfer Records, supervisor mode only
  Ssdbltrp     : Address double trap at privilege modes lower than Machine
  Ssnpm        : Supervisor-level pointer masking for next lower privilege
  Sspm         : Indicates that there is pointer-masking support in supervisor mode
  Ssstateen    : Supervisor-mode view of the state-enable extension
  Ssstrict     : Unimplemented reserved encodings raise illegal instruction exceptions
  Sstc         : Supervisor-mode timer interrupts
  Sstvala      : stval provides all needed values
  Sstvecd      : stvec supports Direct mode
  Ssu64xl      : UXLEN=64 must be supported
  Supm         : Indicates that there is pointer-masking support in user mode
  Sv48         : Page-Based 48-bit Virtual-Memory System
  Svadu        : Hardware Updating of A/D Bits
  Svinval      : Fine-Grained Address-Translation Cache Invalidation
  Svnapot      : NAPOT Translation Contiguity
  Svpbmt       : Page-Based Memory Types
  Svrsw60t59b  : PTE Reserved-for-Software Bits 60-59
  Svvptc       : Obviating Memory-management Instructions after Marking PTEs valid
  Za64rs       : Reservation set size of 64 bytes
  Zaamo        : Atomic Memory Operations
  Zabha        : Extension for Byte and Halfword Atomic Memory Operations
  Zacas        : Extension for Atomic Compare-and-Swap (CAS) instructions
  Zalrsc       : Load-Reserved/Store-conditional
  Zama16b      : Atomic misaligned acces to main memory regions that do not cross aligned 16-byte boundary
  Zawrs        : Wait-on-reservation-set instructions
  Zba          : Address Computation
  Zbb          : Bit Manipulation
  Zbc          : Carryless Multiplication
  Zbkb         : Extension for Bit Manipulation for Cryptography
  Zbkc         : Extension for Carryless Multiplication for Cryptography
  Zbkx         : Crossbar Permutation Extension
  Zbs          : Single-Bit Manipulation
  Zca          : Compressed instructions
  Zcb          : Additional compressed instructions
  Zcd          : Compressed double precision FP loads and stores
  Zcmop        : Compressed may-be-operations
  Zfa          : Additional floating-Point instructions
  Zfbfmin      : Scalar BF16 converts
  Zfh          : Extension for Half-Precision Floating-Point
  Zfhmin       : Minimal Extension for Half-Precision Floating-Point
  Zic64b       : Cache block size is 64 bytes
  Zicbom       : Cache-Block Management
  Zicbop       : Cache-Block Prefetching
  Zicboz       : Cache-Block Zeroing
  Ziccamoa     : Main memory supports all atomics in A
  Ziccif       : Main memory supports instruction fetch with atomicity requirement
  Zicclsm      : Main memory supports misaligned loads/stores
  Ziccrse      : Main memory supports forward progress on LR/SC sequences
  Zicfilp      : Landing Pads
  Zicfiss      : Shadow Stack
  Zicntr       : Basic performance counters
  Zicond       : Integer conditional operations
  Zicsr        : Control and Status Register instructions
  Zifencei     : Instruction-fetch fence instruction
  Zihintntl    : Non-temporal locality hints
  Zihintpause  : Pause Hint
  Zihpm        : Hardware performance counters
  Zimop        : may-be-operations
  Zk           : Standard Scalar Cryptography Extension
  Zkn          : NIST Cryptography Extension
  Zknd         : AES Decryption Extension
  Zkne         : AES Encryption Extension
  Zknh         : SHA2 Hashing Extension
  Zkr          : Entropy Source Extension
  Zks          : ShangMi Cryptography Extension
  Zksed        : SM4 Block Cypher Extension
  Zksh         : SM3 Hashing Extension
  Zkt          : Data-Independent Execution Latency
  Zmmul        : Multiplication subset of M (MUL, MULH, MULHU, MULHSU, MULW)
  Ztso         : RISC-V Total Store Ordering (RVTSO)
  Zvbb         : Vector Basic Bit-manipulation
  Zvbc         : Vector Carryless Multiplication
  Zve32f       : Vector Extension for Embedded Processors, VLEN=32, single precision FP
  Zve32x       : Vector Extension for Embedded Processors, VLEN=32, scalar only
  Zve64d       : Vector Extension for Embedded Processors, VLEN=64, double precision FP
  Zve64f       : Vector Extension for Embedded Processors, VLEN=64, single precision FP
  Zve64x       : Vector Extension for Embedded Processors, VLEN=64, scalar only
  Zvfbfmin     : Vector BF16 converts
  Zvfbfwma     : Vector BF16 widening mul-add
  Zvfh         : Vector half-precision FP
  Zvfhmin      : Vector Extension for minimal half-precision FP
  Zvkb         : Vector Cryptography Bit-manipulation
  Zvkg         : Vector Cryptography GCM/GMAC
  Zvkn         : NIST Algorithm Suite
  Zvknc        : NIST Suite with carryless multiply
  Zvkned       : NIST Suite Vector AES Block Cipher
  Zvkng        : NIST Suite Vector AES with GCM
  Zvknha       : NIST Suite Vector SHA-2 Secure Hash (SHA-256 only)
  Zvknhb       : NIST Suite Vector SHA-2 Secure Hash (SHA-256, SHA-512)
  Zvks         : ShangMi (SM) Algorithm Suite
  Zvksc        : ShangMi Suite with carryless multiplication
  Zvksed       : ShangMi Suite SM4 Block Cipher
  Zvksg        : ShangMi Suite with GCM
  Zvksh        : ShangMi Suite SM3 Secure Hash
  Zvkt         : Vector Data-Independent Execution Latency

ISA profiles
============
  RVI20U32 : No
  RVI20U64 : Yes
  RVA20U64 : No
      Missing 1 extensions:
      Za128rs : Reservation set size of 128 bytes
  RVA20S64 : No
      Missing 4 extensions:
      Za128rs : Reservation set size of 128 bytes
      Ss1p11  : Supervisor Architecture v1.11
      Svbare  : Bare mode virtual-memory translation supported
      Svade   : Raise exceptions on improper A/D bits
  RVA22U64 : Yes
  RVA22S64 : No
      Missing 4 extensions:
      Ss1p12 : Supervisor Architecture v1.12
      Svbare : Bare mode virtual-memory translation supported
      Sv39   : Page-Based 39-bit Virtual-Memory System
      Svade  : Raise exceptions on improper A/D bits
  RVA23U64 : Yes
  RVA23S64 : No
      Missing 4 extensions:
      Ss1p13 : Supervisor Architecture v1.13
      Svbare : Bare mode virtual-memory translation supported
      Sv39   : Page-Based 39-bit Virtual-Memory System
      Svade  : Raise exceptions on improper A/D bits

