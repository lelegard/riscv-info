
Base architecture
=================
RV64IMAFDCH (64 bits)
  I: Integer instructions
  M: Integer multiplication and division
  A: Atomic instructions
  F: Single-precision floating-point
  D: Double-precision floating-point
  C: Compressed instructions
  H: Hypervisor

Unimplemented flags
  B: Bit manipulation
  E: Integer instructions (embedded)
  J: Dynamically translated languages
  L: Decimal floating-point
  N: User-level interrupts
  P: Packed-SIMD instructions
  Q: Quad-precision floating-point
  S: Supervisor mode
  T: Transactional memory
  V: Vector operations

ISA extensions
==============
Found 43 extensions
  Sdtrig       : Debug triggers
  Shcounterenw : Support writeable enables for any supported counter
  Shgatpa      : SvNNx4 mode supported for all modes supported by satp, as well as Bare
  Shtvala      : htval provides all needed values
  Shvsatpa     : vsatp supports all modes supported by satp
  Shvstvala    : vstval provides all needed values
  Shvstvecd    : vstvec supports Direct mode
  Ssccptr      : Main memory supports page table reads
  Sscounterenw : Support writeable enables for any supported counter
  Ssstrict     : Unimplemented reserved encodings raise illegal instruction exceptions
  Sstc         : Supervisor-level timer interrupts
  Sstvala      : stval provides all needed values
  Sstvecd      : stvec supports direct mode
  Ssu64xl      : UXLEN=64 must be supported
  Sv48         : Page-based 48-bit virtual-memory system
  Svadu        : Hardware updating of A/D Bits
  Svvptc       : Obviating memory-management instructions after marking PTEs valid
  Za64rs       : Reservation set size of 64 bytes
  Zaamo        : Atomic memory operations
  Zalrsc       : Load-reserved/store-conditional
  Zawrs        : Wait-on-reservation-set instructions
  Zba          : Address computation
  Zbb          : Bit manipulation
  Zbc          : Carryless multiplication
  Zbs          : Single-bit manipulation
  Zca          : Compressed instructions
  Zcd          : Compressed double precision FP loads and stores
  Zfa          : Additional FP instructions
  Zic64b       : Cache block size is 64 bytes
  Zicbom       : Cache-block management
  Zicbop       : Cache-block prefetching
  Zicboz       : Cache-block zeroing
  Ziccamoa     : Main memory supports all atomics in A
  Ziccif       : Main memory supports instruction fetch with atomicity requirement
  Zicclsm      : Main memory supports misaligned loads/stores
  Ziccrse      : Main memory supports forward progress on LR/SC sequences
  Zicntr       : Basic performance counters
  Zicsr        : Control and Status Register instructions
  Zifencei     : Instruction-fetch fence instruction
  Zihintntl    : Non-temporal locality hints
  Zihintpause  : Pause Hint
  Zihpm        : Hardware performance counters
  Zmmul        : Multiplication subset of M (MUL, MULH, MULHU, MULHSU, MULW)

111 unimplemented extensions
  Sdext       : Debug extension
  Sha         : Augmented hypervisor
  Sm1p11      : Machine-level architecture v1.11
  Sm1p12      : Machine-level architecture v1.12
  Sm1p13      : Machine-level architecture v1.13
  Smaia       : Machine-level advanced interrupt architecture
  Smcdeleg    : Machine-level counter delegation
  Smcntrpmf   : Cycle and instret privilege mode filtering
  Smcsrind    : Machine-level indirect CSR access
  Smctr       : Control transfer records, machine and supervisor modes
  Smdbltrp    : Address double trap in Machine-level
  Smepmp      : Machine-level memory access and execution prevention
  Smmpm       : Machine-level pointer masking for Machine-level
  Smnpm       : Machine-level pointer masking for next lower privilege
  Smrnmi      : Resumable Non-Maskable Interrupts
  Smstateen   : Machine-level view of the state-enable
  Ss1p11      : Supervisor-level architecture v1.11
  Ss1p12      : Supervisor-level architecture v1.12
  Ss1p13      : Supervisor-level architecture v1.13
  Ssaia       : Supervisor-level advanced interrupt architecture
  Ssccfg      : Supervisor-level counter configuration
  Sscdeleg    : Supervisor-level counter delegation
  Sscofpmf    : Count overflow and mode-based filtering
  Sscsrind    : Supervisor-level indirect CSR access
  Ssctr       : Control Transfer Records, supervisor mode only
  Ssdbltrp    : Address double trap at privilege modes lower than Machine
  Ssnpm       : Supervisor-level pointer masking for next lower privilege
  Sspm        : Indicates that there is pointer-masking support in supervisor mode
  Ssqosid     : Quality-of-Service (QoS) identifiers
  Ssstateen   : Supervisor-level view of the state-enable
  Supm        : Indicates that there is pointer-masking support in user mode
  Sv32        : Page-based 32-bit virtual-memory system
  Sv39        : Page-based 39-bit virtual-memory system
  Sv57        : Page-based 57-bit virtual-memory system
  Svade       : Raise exceptions on improper A/D bits
  Svbare      : Bare mode virtual-memory translation supported
  Svinval     : Fine-grained address-translation cache invalidation
  Svnapot     : NAPOT translation contiguity
  Svpbmt      : Page-based memory types
  Svrsw60t59b : PTE reserved-for-software bits 60-59
  Za128rs     : Reservation set size of 128 bytes
  Zabha       : Byte and halfword atomic memory operations
  Zacas       : Atomic compare-and-swap (CAS) instructions
  Zama16b     : Atomic misaligned acces to main memory regions that do not cross aligned 16-byte boundary
  Zbkb        : Bit manipulation for cryptography
  Zbkc        : Carryless multiplication for cryptography
  Zbkx        : Crossbar permutation
  Zcb         : Additional compressed instructions
  Zce         : Compressed instructions for embedded microcontrollers
  Zcf         : Compressed single precision FP loads and stores (RV32 only)
  Zclsd       : Compressed load/store pair instructions
  Zcmop       : Compressed may-be-operations
  Zcmp        : Compressed function call prologues and epilogues
  Zcmt        : Compressed static function calls
  Zdinx       : Double-precision FP in X-registers
  Zfbfmin     : Scalar BF16 converts
  Zfh         : Half-precision FP
  Zfhmin      : Minimal half-precision FP
  Zfinx       : Single-precision FP in X-registers
  Zhinx       : Half-precision FP in X-registers
  Zhinxmin    : Minimal half-precision FP in X-registers
  Ziccamoc    : Main memory supports atomics in Zacas
  Zicfilp     : Landing pads
  Zicfiss     : Shadow stack
  Zicond      : Integer conditional operations
  Zilsd       : Load/Store pair instructions
  Zimop       : may-be-operations
  Zk          : Standard scalar cryptography
  Zkn         : NIST cryptography
  Zknd        : AES decryption
  Zkne        : AES encryption
  Zknh        : SHA2 hashing
  Zkr         : Entropy source
  Zks         : ShangMi (SM) cryptography
  Zksed       : SM4 block cypher
  Zksh        : SM3 hashing
  Zkt         : Data-independent execution latency
  Ztso        : RISC-V total store ordering (RVTSO)
  Zvbb        : Vector basic bit-manipulation
  Zvbc        : Vector carryless multiplication
  Zve         : Embedded vector extension
  Zve32f      : Embedded vectors (32-bit int, 32-bit FP)
  Zve32x      : Embedded vectors (32-bit int)
  Zve64d      : Embedded vectors (64-bit int, 64-bit FP)
  Zve64f      : Embedded vectors (64-bit int, 32-bit FP)
  Zve64x      : Embedded vectors (64-bit int)
  Zvfbfmin    : Vector BF16 converts
  Zvfbfwma    : Vector BF16 widening mul-add
  Zvfh        : Vector half-precision FP
  Zvfhmin     : Vector for minimal half-precision FP
  Zvkb        : Vector cryptography bit-manipulation
  Zvkg        : Vector cryptography GCM/GMAC
  Zvkn        : NIST algorithm suite
  Zvknc       : NIST suite with carryless multiply
  Zvkned      : NIST suite vector AES block cipher
  Zvkng       : NIST suite vector AES with GCM
  Zvknha      : NIST suite vector SHA-2 secure hash (SHA-256 only)
  Zvknhb      : NIST suite vector SHA-2 secure hash (SHA-256, SHA-512)
  Zvks        : ShangMi (SM) algorithm suite
  Zvksc       : ShangMi suite with carryless multiplication
  Zvksed      : ShangMi suite SM4 block cipher
  Zvksg       : ShangMi suite with GCM
  Zvksh       : ShangMi suite SM3 secure hash
  Zvkt        : Vector data-independent execution latency
  Zvl         : Vector extension
  Zvl32b      : 32-bit vectors
  Zvl64b      : 64-bit vectors
  Zvl128b     : 128-bit vectors
  Zvl256b     : 256-bit vectors
  Zvl512b     : 512-bit vectors
  Zvl1024b    : 1024-bit vectors

ISA profiles
============
  RVI20U32 : No
  RVI20U64 : Yes
  RVA20U64 : No
  - Missing 1 mandatory extensions:
    Za128rs : Reservation set size of 128 bytes
  RVA20S64 : No
  - Missing 4 mandatory extensions:
    Za128rs : Reservation set size of 128 bytes
    Ss1p11  : Supervisor-level architecture v1.11
    Svbare  : Bare mode virtual-memory translation supported
    Svade   : Raise exceptions on improper A/D bits
  RVA22U64 : No
  - Missing 1 optional flags: V
  - Missing 2 mandatory extensions:
    Zfhmin : Minimal half-precision FP
    Zkt    : Data-independent execution latency
  - Missing 3 optional extensions:
    Zfh    : Half-precision FP
    Zkn    : NIST cryptography
    Zks    : ShangMi (SM) cryptography
  RVA22S64 : No
  - Missing 1 optional flags: V
  - Missing 8 mandatory extensions:
    Zfhmin    : Minimal half-precision FP
    Zkt       : Data-independent execution latency
    Ss1p12    : Supervisor-level architecture v1.12
    Svbare    : Bare mode virtual-memory translation supported
    Sv39      : Page-based 39-bit virtual-memory system
    Svade     : Raise exceptions on improper A/D bits
    Svpbmt    : Page-based memory types
    Svinval   : Fine-grained address-translation cache invalidation
  - Missing 8 optional extensions:
    Zfh       : Half-precision FP
    Zkn       : NIST cryptography
    Zks       : ShangMi (SM) cryptography
    Sv57      : Page-based 57-bit virtual-memory system
    Svnapot   : NAPOT translation contiguity
    Sscofpmf  : Count overflow and mode-based filtering
    Zkr       : Entropy source
    Ssstateen : Supervisor-level view of the state-enable
  RVA23U64 : No
  - Missing 2 mandatory flags: BV
  - Missing 9 mandatory extensions:
    Zfhmin   : Minimal half-precision FP
    Zvfhmin  : Vector for minimal half-precision FP
    Zvbb     : Vector basic bit-manipulation
    Zvkt     : Vector data-independent execution latency
    Zicond   : Integer conditional operations
    Zimop    : may-be-operations
    Zcmop    : Compressed may-be-operations
    Zcb      : Additional compressed instructions
    Supm     : Indicates that there is pointer-masking support in user mode
  - Missing 14 optional extensions:
    Zvkng    : NIST suite vector AES with GCM
    Zvksg    : ShangMi suite with GCM
    Zabha    : Byte and halfword atomic memory operations
    Zacas    : Atomic compare-and-swap (CAS) instructions
    Ziccamoc : Main memory supports atomics in Zacas
    Zvbc     : Vector carryless multiplication
    Zama16b  : Atomic misaligned acces to main memory regions that do not cross aligned 16-byte boundary
    Zfh      : Half-precision FP
    Zicfilp  : Landing pads
    Zicfiss  : Shadow stack
    Zvfh     : Vector half-precision FP
    Zfbfmin  : Scalar BF16 converts
    Zvfbfmin : Vector BF16 converts
    Zvfbfwma : Vector BF16 widening mul-add
  RVA23S64 : No
  - Missing 2 mandatory flags: BV
  - Missing 20 mandatory extensions:
    Zfhmin    : Minimal half-precision FP
    Zvfhmin   : Vector for minimal half-precision FP
    Zvbb      : Vector basic bit-manipulation
    Zvkt      : Vector data-independent execution latency
    Zicond    : Integer conditional operations
    Zimop     : may-be-operations
    Zcmop     : Compressed may-be-operations
    Zcb       : Additional compressed instructions
    Supm      : Indicates that there is pointer-masking support in user mode
    Ss1p13    : Supervisor-level architecture v1.13
    Svbare    : Bare mode virtual-memory translation supported
    Sv39      : Page-based 39-bit virtual-memory system
    Svade     : Raise exceptions on improper A/D bits
    Svpbmt    : Page-based memory types
    Svinval   : Fine-grained address-translation cache invalidation
    Svnapot   : NAPOT translation contiguity
    Sscofpmf  : Count overflow and mode-based filtering
    Ssnpm     : Supervisor-level pointer masking for next lower privilege
    Sha       : Augmented hypervisor
    Ssstateen : Supervisor-level view of the state-enable
  - Missing 3 optional extensions:
    Sv57      : Page-based 57-bit virtual-memory system
    Zkr       : Entropy source
    Sspm      : Indicates that there is pointer-masking support in supervisor mode
  RVB23U64 : No
  - Missing 1 mandatory flags: B
  - Missing 1 optional flags: V
  - Missing 5 mandatory extensions:
    Zkt      : Data-independent execution latency
    Zicond   : Integer conditional operations
    Zimop    : may-be-operations
    Zcmop    : Compressed may-be-operations
    Zcb      : Additional compressed instructions
  - Missing 23 optional extensions:
    Zvkng    : NIST suite vector AES with GCM
    Zvksg    : ShangMi suite with GCM
    Zvkg     : Vector cryptography GCM/GMAC
    Zvknc    : NIST suite with carryless multiply
    Zvksc    : ShangMi suite with carryless multiplication
    Zkn      : NIST cryptography
    Zks      : ShangMi (SM) cryptography
    Zabha    : Byte and halfword atomic memory operations
    Zacas    : Atomic compare-and-swap (CAS) instructions
    Ziccamoc : Main memory supports atomics in Zacas
    Zama16b  : Atomic misaligned acces to main memory regions that do not cross aligned 16-byte boundary
    Zfhmin   : Minimal half-precision FP
    Zvbb     : Vector basic bit-manipulation
    Zvkt     : Vector data-independent execution latency
    Supm     : Indicates that there is pointer-masking support in user mode
    Zfh      : Half-precision FP
    Zicfilp  : Landing pads
    Zicfiss  : Shadow stack
    Zvfh     : Vector half-precision FP
    Zfbfmin  : Scalar BF16 converts
    Zvfbfmin : Vector BF16 converts
    Zvfbfwma : Vector BF16 widening mul-add
    Zvbc     : Vector carryless multiplication
  RVB23S64 : No
  - Missing 1 mandatory flags: B
  - Missing 1 optional flags: V
  - Missing 12 mandatory extensions:
    Zkt      : Data-independent execution latency
    Zicond   : Integer conditional operations
    Zimop    : may-be-operations
    Zcmop    : Compressed may-be-operations
    Zcb      : Additional compressed instructions
    Ss1p13   : Supervisor-level architecture v1.13
    Svnapot  : NAPOT translation contiguity
    Sv39     : Page-based 39-bit virtual-memory system
    Svade    : Raise exceptions on improper A/D bits
    Svpbmt   : Page-based memory types
    Svinval  : Fine-grained address-translation cache invalidation
    Sscofpmf : Count overflow and mode-based filtering
  - Missing 27 optional extensions:
    Zvkng    : NIST suite vector AES with GCM
    Zvksg    : ShangMi suite with GCM
    Zvkg     : Vector cryptography GCM/GMAC
    Zvknc    : NIST suite with carryless multiply
    Zvksc    : ShangMi suite with carryless multiplication
    Zkn      : NIST cryptography
    Zks      : ShangMi (SM) cryptography
    Zabha    : Byte and halfword atomic memory operations
    Zacas    : Atomic compare-and-swap (CAS) instructions
    Ziccamoc : Main memory supports atomics in Zacas
    Zama16b  : Atomic misaligned acces to main memory regions that do not cross aligned 16-byte boundary
    Zfhmin   : Minimal half-precision FP
    Zvbb     : Vector basic bit-manipulation
    Zvkt     : Vector data-independent execution latency
    Supm     : Indicates that there is pointer-masking support in user mode
    Zfh      : Half-precision FP
    Zicfilp  : Landing pads
    Zicfiss  : Shadow stack
    Zvfh     : Vector half-precision FP
    Zfbfmin  : Scalar BF16 converts
    Zvfbfmin : Vector BF16 converts
    Zvfbfwma : Vector BF16 widening mul-add
    Zvbc     : Vector carryless multiplication
    Sha      : Augmented hypervisor
    Sv57     : Page-based 57-bit virtual-memory system
    Zkr      : Entropy source
    Sspm     : Indicates that there is pointer-masking support in supervisor mode

