
Base architecture
=================
RV64IMAFDCVH (64 bits)
  I: Integer instructions
  M: Integer multiplication and division
  A: Atomic instructions
  F: Single-precision floating-point
  D: Double-precision floating-point
  C: Compressed instructions
  V: Vector operations
  H: Hypervisor
  B: Bit manipulation

ISA extensions
==============
Found 66 extensions
  Sdtrig       : Debug triggers
  Sha          : Augmented hypervisor
  Shcounterenw : Support writeable enables for any supported counter
  Shgatpa      : SvNNx4 mode supported for all modes supported by satp, as well as Bare
  Shtvala      : htval provides all needed values
  Shvsatpa     : vsatp supports all modes supported by satp
  Shvstvala    : vstval provides all needed values
  Shvstvecd    : vstvec supports Direct mode
  Smnpm        : Machine-level pointer masking for next lower privilege
  Smstateen    : Machine-level view of the state-enable
  Ssccptr      : Main memory supports page table reads
  Sscofpmf     : Count overflow and mode-based filtering
  Sscounterenw : Support writeable enables for any supported counter
  Ssnpm        : Supervisor-level pointer masking for next lower privilege
  Ssstateen    : Supervisor-level view of the state-enable
  Ssstrict     : Unimplemented reserved encodings raise illegal instruction exceptions
  Sstc         : Supervisor-level timer interrupts
  Sstvala      : stval provides all needed values
  Sstvecd      : stvec supports direct mode
  Ssu64xl      : UXLEN=64 must be supported
  Supm         : Indicates that there is pointer-masking support in user mode
  Sv39         : Page-based 39-bit virtual-memory system
  Svade        : Raise exceptions on improper A/D bits
  Svinval      : Fine-grained address-translation cache invalidation
  Svnapot      : NAPOT translation contiguity
  Svpbmt       : Page-based memory types
  Za64rs       : Reservation set size of 64 bytes
  Zaamo        : Atomic memory operations
  Zalrsc       : Load-reserved/store-conditional
  Zawrs        : Wait-on-reservation-set instructions
  Zba          : Address computation
  Zbb          : Bit manipulation
  Zbs          : Single-bit manipulation
  Zca          : Compressed instructions
  Zcb          : Additional compressed instructions
  Zcd          : Compressed double precision FP loads and stores
  Zcmop        : Compressed may-be-operations
  Zfa          : Additional FP instructions
  Zfhmin       : Minimal half-precision FP
  Zic64b       : Cache block size is 64 bytes
  Zicbom       : Cache-block management
  Zicbop       : Cache-block prefetching
  Zicboz       : Cache-block zeroing
  Ziccamoa     : Main memory supports all atomics in A
  Ziccif       : Main memory supports instruction fetch with atomicity requirement
  Zicclsm      : Main memory supports misaligned loads/stores
  Ziccrse      : Main memory supports forward progress on LR/SC sequences
  Zicntr       : Basic performance counters
  Zicond       : Integer conditional operations
  Zicsr        : Control and Status Register instructions
  Zifencei     : Instruction-fetch fence instruction
  Zihintntl    : Non-temporal locality hints
  Zihintpause  : Pause Hint
  Zihpm        : Hardware performance counters
  Zimop        : may-be-operations
  Zkt          : Data-independent execution latency
  Zmmul        : Multiplication subset of M (MUL, MULH, MULHU, MULHSU, MULW)
  Zvbb         : Vector basic bit-manipulation
  Zve32f       : Embedded vectors (32-bit int, 32-bit FP)
  Zve32x       : Embedded vectors (32-bit int)
  Zve64d       : Embedded vectors (64-bit int, 64-bit FP)
  Zve64f       : Embedded vectors (64-bit int, 32-bit FP)
  Zve64x       : Embedded vectors (64-bit int)
  Zvfhmin      : Vector for minimal half-precision FP
  Zvkb         : Vector cryptography bit-manipulation
  Zvkt         : Vector data-independent execution latency

ISA profiles
============
  RVI20U32 : No
  RVI20U64 : Yes
  RVA20U64 : No
  RVA20S64 : No
  RVA22U64 : Yes
  RVA22S64 : No
  RVA23U64 : Yes
  RVA23S64 : No
  RVB23U64 : Yes
  RVB23S64 : No

